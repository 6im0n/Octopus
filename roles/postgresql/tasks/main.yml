
- name: Add pgdg repo to sources.list.d
  lineinfile:
    path: /etc/apt/sources.list.d/pgdg.list
    line: "deb http://apt.postgresql.org/pub/repos/apt {{ ansible_distribution_release }}-pgdg main"
    create: true

- name: Import the PostgreSQL public GPG key
  apt_key:
    url: https://www.postgresql.org/media/keys/ACCC4CF8.asc
    state: present

- name: Update the package list
  apt:
    update_cache: yes

- name: Install PostgreSQL et tools
  apt:
    name:
      - postgresql-16
      - postgresql-client-16
      - python3-psycopg2
    state: present

- name: Configure PostgreSQL
  template:
    src: ../files/pg_hba.conf
    dest: /etc/postgresql/16/main/pg_hba.conf
    owner: postgres
    group: postgres
    mode: 0644

- name: Configure PostgreSQL
  template:
    src: ../files/postgresql.conf
    dest: /etc/postgresql/16/main/postgresql.conf
    owner: postgres
    group: postgres
    mode: 0644

- name: Upload schema.sql
  template:
    src: ../files/schema.sql
    dest: /etc/postgresql/16/main/schema.sql
    mode: 0644

- name: Restart Postgresql
  systemd:
    enabled: yes
    name: postgresql@16-main.service
    state: restarted
  changed_when: false

- name: Create a PostgreSQL user
  community.postgresql.postgresql_user:
    name: "{{ postgresql_database_user_username }}"
    password: "{{ postgresql_database_user_password }}"
    encrypted: yes
    state: present

- name: Create a PostgreSQL database
  community.postgresql.postgresql_db:
    name: "{{ postgresql_database_name }}"

- name: Grant all privileges on public schema to paul
  postgresql_privs:
    privs: ALL
    type: schema
    objs: public
    roles: "{{ postgresql_database_user_username }}"
    db: "{{ postgresql_database_name }}"

# - name: Create votes table
#   postgresql_query:
#     query: |
#       CREATE TABLE IF NOT EXISTS votes (
#         id TEXT PRIMARY KEY,
#         vote TEXT NOT NULL
#       );
#     db: "{{ postgresql_database_name }}"

- name: "Ensure database scheme"
  community.postgresql.postgresql_script:
    login_user: "{{ postgresql_database_user_username }}"
    login_password: "{{ postgresql_database_user_password }}"
    login_host: "127.0.0.1"
    db: "{{ postgresql_database_name }}"
    path: /etc/postgresql/16/main/schema.sql
  changed_when: false

- name: Grant all privileges on votes table to paul
  postgresql_privs:
    privs: ALL
    type: table
    objs: votes
    roles: "{{ postgresql_database_user_username }}"
    db: "{{ postgresql_database_name }}"

